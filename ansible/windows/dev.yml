- name: Setting up development environment
  hosts: localhost
  gather_facts: true
  become: false

  vars_files:
    - packages.yml
    - dots.yml
  
  tasks:
  - name: Update apt cache
    ansible.builtin.apt:
      update_cache: yes
    become: true

  - name: Install development packages on WSL
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
    loop: "{{ dev_packages }}"
    become: true
    ignore_errors: yes
    register: package_result

  - name: Warning about missing packages
    ansible.builtin.debug:
      msg: "Package {{ item }} could not be installed"
    loop: "{{ package_result.results | selectattr('failed', 'eq', true) | map(attribute='item') | list }}"
    when: package_result.results | selectattr('failed', 'eq', true) | list | length > 0

  - name: Check if Nix is already installed
    command: which nix-env
    register: nix_installed
    ignore_errors: true

  - name: Install Nix Package Manager
    shell: curl -L https://nixos.org/nix/install | sh -s -- --no-daemon
    when: nix_installed.rc != 0


  - name: Source Nix profile to update environment
    shell: . {{ansible_env.HOME}}/.nix-profile/etc/profile.d/nix.sh
    when: nix_installed.rc != 0

  - name: Install Neovim using Nix
    shell:
      nix-env -iA nixpkgs.neovim

  - name: Perform common config tasks
    include_tasks: ../common/dev.yml

  - name: Setup dotfiles
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/{{ item.src }}"
      dest: "{{ ansible_env.HOME }}/{{ item.dest }}"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: '0755'
    loop: "{{ dots }}"
    when: item.src is defined and item.dest is defined